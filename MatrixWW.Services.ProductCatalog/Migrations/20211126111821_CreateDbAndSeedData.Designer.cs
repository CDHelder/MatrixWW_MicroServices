// <auto-generated />
using MatrixWW.Services.ProductCatalog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MatrixWW.Services.ProductCatalog.Migrations
{
    [DbContext(typeof(ProductCatalogDbContext))]
    [Migration("20211126111821_CreateDbAndSeedData")]
    partial class CreateDbAndSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MatrixWW.Services.ProductCatalog.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gucci"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Adidas"
                        });
                });

            modelBuilder.Entity("MatrixWW.Services.ProductCatalog.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "T-Shirt"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hoodie"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Broek"
                        });
                });

            modelBuilder.Entity("MatrixWW.Services.ProductCatalog.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            Description = "Een wit T-Shirt van Gucci",
                            Name = "Gucci T-Shirt",
                            Price = 90
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CategoryId = 2,
                            Description = "Een bruine Hoodie van Gucci",
                            Name = "Gucci Hoodie",
                            Price = 150
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            CategoryId = 3,
                            Description = "Een zwarte broek van Gucci",
                            Name = "Gucci Broek",
                            Price = 190
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            CategoryId = 1,
                            Description = "Een wit T-Shirt van Nike",
                            Name = "Nike T-Shirt",
                            Price = 80
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 2,
                            CategoryId = 2,
                            Description = "Een bruine Hoodie van Nike",
                            Name = "Nike Hoodie",
                            Price = 140
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            CategoryId = 3,
                            Description = "Een zwarte broek van Nike",
                            Name = "Nike Broek",
                            Price = 180
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 3,
                            CategoryId = 1,
                            Description = "Een wit T-Shirt van Adidas",
                            Name = "Adidas T-Shirt",
                            Price = 70
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 3,
                            CategoryId = 2,
                            Description = "Een bruine Hoodie van Adidas",
                            Name = "Adidas Hoodie",
                            Price = 130
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 3,
                            CategoryId = 3,
                            Description = "Een zwarte broek van Adidas",
                            Name = "Adidas Broek",
                            Price = 170
                        });
                });

            modelBuilder.Entity("MatrixWW.Services.ProductCatalog.Entities.Product", b =>
                {
                    b.HasOne("MatrixWW.Services.ProductCatalog.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrixWW.Services.ProductCatalog.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MatrixWW.Services.ProductCatalog.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MatrixWW.Services.ProductCatalog.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
